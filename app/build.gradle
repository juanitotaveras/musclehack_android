apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'kotlin-kapt'
apply plugin: 'androidx.navigation.safeargs.kotlin'
apply plugin: 'com.google.protobuf'

// Load keystore properties
def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    signingConfigs {
        config {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
        release {
        }
    }
    packagingOptions {
        exclude 'META-INF/atomicfu.kotlin_module'
    }
    compileSdkVersion 35
    defaultConfig {
        applicationId "com.musclehack.targetedHypertrophyTraining"
        minSdkVersion 21
        targetSdkVersion 35
        versionCode 83
        versionName "3.3.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.generatedDensities = ['hdpi', 'xxhdpi']
        multiDexEnabled true
        signingConfig signingConfigs.release
    }
    buildTypes {
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
            debuggable false
            manifestPlaceholders = [crashlyticsEnabled: true]
        }
        debug {
            testCoverageEnabled false
            minifyEnabled false
            signingConfig signingConfigs.config
            manifestPlaceholders = [crashlyticsEnabled: true]
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
    sourceSets {
        test.resources.srcDirs += 'src/androidTest/resources'
        main.java.srcDirs += "${protobuf.generatedFilesBaseDir}/main/javalite"
    }

    productFlavors {
    }
    dataBinding {
        enabled = true
        enabledForTests = true
    }
    namespace 'com.musclehack.targetedHypertrophyTraining'
}
protobuf {

    protoc {
        //rvb: added if-else statement for build on iOS device
        if (project.hasProperty('protoc_platform')) {
            artifact = "com.google.protobuf:protoc:3.0.0:${protoc_platform}"
        } else {
            artifact = "com.google.protobuf:protoc:3.0.0"
        }
    }
    plugins {
        lite {
            //rvb: added if-else statement for build on iOS device
            if (project.hasProperty('protoc_platform')) {
                artifact = "com.google.protobuf:protoc-gen-javalite:3.0.0:${protoc_platform}"
            } else {
                artifact = "com.google.protobuf:protoc-gen-javalite:3.0.0"
            }
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                remove java
            }
            task.plugins {
                lite { }
            }
        }
    }
}

repositories {
    maven {
        url "https://s3.amazonaws.com/repo.commonsware.com"
    }
    mavenCentral()
}

dependencies {
    implementation "androidx.preference:preference-ktx:1.2.1"
    // tab layout for view pager
    implementation "com.google.android.material:material:1.13.0"

    implementation 'androidx.recyclerview:recyclerview:1.3.0'
    implementation 'com.google.firebase:firebase-crashlytics:18.3.5'
    implementation 'com.google.firebase:firebase-analytics:23.0.0'
    testImplementation 'org.robolectric:robolectric:4.11.1'
    testImplementation 'org.robolectric:shadows-multidex:4.11.1'
    //noinspection GradleCompatible
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.legacy:legacy-support-v13:1.0.0'
    implementation 'androidx.vectordrawable:vectordrawable:1.1.0'
    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    testImplementation 'junit:junit:4.13.2'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0' // not update-able
    implementation 'com.commonsware.cwac:security:0.8.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.jjoe64:graphview:4.2.1'
    implementation "androidx.annotation:annotation:$androidXAnnotations"
    // Required for instrumented tests
    androidTestImplementation 'androidx.annotation:annotation:1.6.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit:1.0.6'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.5.1'

    // Google play services

    implementation 'androidx.browser:browser:1.5.0'

    // ROOM
// Room components
    implementation "androidx.room:room-runtime:$rootProject.roomVersion"
    implementation "androidx.room:room-ktx:$rootProject.roomVersion"
    kapt "androidx.room:room-compiler:$rootProject.roomVersion"
    androidTestImplementation "androidx.room:room-testing:$rootProject.roomVersion"

// Lifecycle components
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$archLifecycleVersion"
    androidTestImplementation "androidx.arch.core:core-testing:$rootProject.androidxArchVersion"

// ViewModel Kotlin support
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$rootProject.archLifecycleVersion"

// Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"

    // local unit test
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4"

    // unit test
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"


// UI
    implementation "com.google.android.material:material:$rootProject.materialVersion"

// Testing
    androidTestImplementation "androidx.arch.core:core-testing:$rootProject.coreTestingVersion"
    implementation "androidx.test:core:$androidXTestCoreVersion"
    testImplementation "androidx.test.ext:junit-ktx:$androidXTestExtKotlinRunnerVersion"
    testImplementation "androidx.test:core-ktx:$androidXTestCoreVersion"
    testImplementation "androidx.test:rules:$androidXTestRulesVersion"


// unit testing
    testImplementation "androidx.arch.core:core-testing:$archTestingVersion"

    // DAGGER
    implementation "com.google.dagger:dagger:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"

    // NAVIGATION

    // Java language implementation
    implementation "androidx.navigation:navigation-fragment:$nav_version"
    implementation "androidx.navigation:navigation-ui:$nav_version"

    // Kotlin
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Dynamic Feature Module Support
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"

    // Testing Navigation
    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"
    testImplementation("com.google.truth:truth:1.4.4")
    androidTestImplementation("com.google.truth:truth:1.4.4")

    // Protobuf
    implementation 'com.google.protobuf:protobuf-lite:3.0.0'

    kapt("org.jetbrains.kotlinx:kotlinx-metadata-jvm:0.5.0")

    // Database import/export
    implementation 'com.github.dessalines:room-db-export-import:0.1.0'
}
